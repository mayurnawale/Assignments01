1)
from itertools import chain
test_dict = {'gfg' : [5, 6, 7, 8],
            'is' : [10, 11, 7, 5],
            'best' : [6, 12, 10, 8],
            'for' : [1, 2, 5]}
print("The original dictionary is : " + str(test_dict))
res = list(sorted(set(chain(*test_dict.values()))))
print("The unique values list is : " + str(res))

2)
def returnSum(myDict):
     
    list = []
    for i in myDict:
        list.append(myDict[i])
    final = sum(list)
     
    return final
dict = {'a': 100, 'b':200, 'c':300}
print("Sum :", returnSum(dict))

3)
def Merge(dict1, dict2):
    return(dict2.update(dict1))
dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
print(Merge(dict1, dict2))
print(dict2)

4)
from itertools import product
my_dict = {'month_num' : [1, 2, 3, 4, 5, 6], 'name_of_month' : ['Jan', 'Feb', 'March', 'Apr', 'May', 'June' ]}
print(my_dict)
my_result = zip(my_dict['month_num'], my_dict['name_of_month'])
print(my_result)

5)
from collections import OrderedDict
mydict = OrderedDict([('mayur','1') , ('Akshay','2')])
mydict.update({'vivek':'4'})
mydict.move_to_end('vivek', last = False)
mydict

6)
from collections import OrderedDict 
def checkOrder(input, pattern): 
    dict = OrderedDict.fromkeys(input) 
    ptrlen = 0
    for key,value in dict.items(): 
        if (key == pattern[ptrlen]): 
            ptrlen = ptrlen + 1
        if (ptrlen == (len(pattern))): 
            return 'true'
    return 'false'
if __name__ == "__main__": 
    input = 'engineers'
    pattern = 'egr'
    print (checkOrder(input,pattern))
    
7)
def dictionairy(): 
     mydict ={1:"A",2:"B",3:"C",4:"D"}    
     print ("Sorted Keys are")
     for i in sorted(mydict.values()) : 
         print(i, end = " ")
dictionairy()