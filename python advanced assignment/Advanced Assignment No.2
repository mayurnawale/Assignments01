1)
  Modules are collections of methods and constants.They cannot generate instances.Classes may generate instances and have instance variables.

2)
  To create a new instance of an object, we use the "new" keyword.This keyword creates a new instance of an object, which can then assign to a variable.
  To create instances of a class,we call the class using class name and pass in whatever arguments its __init__ method accepts.

3)
  Class attributes are attributes which are owned by the class itself.They will be shared by all the instances of the class.We define class attributes outside all the methods and usually they are placed at the top, right below the class header.

4)
  instance attribute variable belonging to only one object.This variable is only accessible in the scope of this object and it is defined inside the function __init__(self,..) of the class.

5)
  "self" represents the instance of the class.“self” keyword used to access the attributes and methods of the class in python.it binds the attributes with the arguments.
  
6)
  Operator Overloading means giving extended meaning beyond their predefined operational meaning.if + is used to add two integers as well as join two strings and merge two lists. It is possible because ‘+’ operator is overloaded by int class and str class.  

7)
  if we have two objects which are a physical representation of a class and we have to add two objects with binary '+' operator it throws an error,because compiler don't know how to add two objects.So we define a method for an operator and that process is knows as operator overloading.

8)
  addition operator is the most popular form of the operator overloading.

9)
-Inheritance
-Encapsulation